// This file has been generated by reducer-gen (@Stefan Pauka) written in 2020.
// DO NOT Change anything inside this file. Every time the generator is used, it will be overwritten.

import { APP_STATES } from "../../interfaces/APP_STATES";
import { SnackbarData } from "../../interfaces/SnackbarData";
import { LOCALE_LANGUAGES } from "../../interfaces/LOCALE_LANGUAGES";
import { APP_FEATURES } from "../../interfaces/APP_FEATURES";
import ReducerAction from "./../reducerActions/reducerActions.base.generated";
import actions from "./../actions/action.base.generated";

export const snackbarActionCreatorsBase = {
    setAppState: (nextAppState:  APP_STATES | undefined): ReducerAction => (
        {
            type: actions.SNACKBAR_SET_APP_STATE,
            next: nextAppState,
        }),
    setDarkMode: (nextDarkMode:  boolean): ReducerAction => (
        {
            type: actions.SNACKBAR_SET_DARK_MODE,
            next: nextDarkMode,
        }),
    setSnackbarDatas: (nextSnackbarDatas:  SnackbarData[]): ReducerAction => (
        {
            type: actions.SNACKBAR_SET_SNACKBAR_DATAS,
            next: nextSnackbarDatas,
        }),
    setIsHeaderExpanded: (nextIsHeaderExpanded:  boolean): ReducerAction => (
        {
            type: actions.SNACKBAR_SET_IS_HEADER_EXPANDED,
            next: nextIsHeaderExpanded,
        }),
    setLoadingIndicators: (nextLoadingIndicators:  symbol[]): ReducerAction => (
        {
            type: actions.SNACKBAR_SET_LOADING_INDICATORS,
            next: nextLoadingIndicators,
        }),
    setGlobalLoadingIndicators: (nextGlobalLoadingIndicators:  symbol[]): ReducerAction => (
        {
            type: actions.SNACKBAR_SET_GLOBAL_LOADING_INDICATORS,
            next: nextGlobalLoadingIndicators,
        }),
    setLocale: (nextLocale:  LOCALE_LANGUAGES | null): ReducerAction => (
        {
            type: actions.SNACKBAR_SET_LOCALE,
            next: nextLocale,
        }),
    setFeature: (nextFeature:  APP_FEATURES | null): ReducerAction => (
        {
            type: actions.SNACKBAR_SET_FEATURE,
            next: nextFeature,
        }),
    setAppBasePath: (nextAppBasePath:  string | null): ReducerAction => (
        {
            type: actions.SNACKBAR_SET_APP_BASE_PATH,
            next: nextAppBasePath,
        }),        
}

export default snackbarActionCreatorsBase;
