// This file has been generated by reducer-gen (@Stefan Pauka) written in 2020.

import extendedActions from "./../actions/action.extended";
import getDefaultState from "./../defaultState.base.generated";
// import actions from "./../actions/action.base.generated";
import SnackbarReducerActions from "./../reducerActions/reducerActions.main.generated";
import State from "./../state";

// Uncomment for some typechecking:
// import { isAppReducerActionsBase } from "./../reducerActions/reducerActions.base.generated";
// import { isAppReducerActionsExtended } from "./../reducerActions/reducerActions.extended";

/**
 * You may add here extending reducer behaviors for this features reducer
 */

const appReducerExtended = (
    state: State = getDefaultState(),
    action: SnackbarReducerActions
): State => {
    switch (action.type) {
        case extendedActions.ADD_SNACKBAR_DATA:
            return {
                ...state,
                snackbarDatas: [...state.snackbarDatas, action.next],
            };
        case extendedActions.REMOVE_SNACKBAR_DATA:
            return {
                ...state,
                snackbarDatas: state.snackbarDatas.filter(
                    (data) => data !== action.next
                ),
            };

        default:
            return state;
    }
};

export default appReducerExtended;
