// This file has been generated by reducer-gen (@Stefan Pauka) written in 2020.
// DO NOT Change anything inside this file. Every time the generator is used, it will be overwritten.

import { APP_STATES } from "../../interfaces/APP_STATES";
import { SnackbarData } from "../../interfaces/SnackbarData";
import { LOCALE_LANGUAGES } from "../../interfaces/LOCALE_LANGUAGES";
import { APP_FEATURES } from "../../interfaces/APP_FEATURES";
import actions from "./../actions/action.base.generated";
        
export type SnackbarReducerActionsBase = { type: actions } & (
   | {
        type: actions.SNACKBAR_SET_APP_STATE;
        next:  APP_STATES | undefined;
    }   | {
        type: actions.SNACKBAR_SET_DARK_MODE;
        next:  boolean;
    }   | {
        type: actions.SNACKBAR_SET_SNACKBAR_DATAS;
        next:  SnackbarData[];
    }   | {
        type: actions.SNACKBAR_SET_IS_HEADER_EXPANDED;
        next:  boolean;
    }   | {
        type: actions.SNACKBAR_SET_LOADING_INDICATORS;
        next:  symbol[];
    }   | {
        type: actions.SNACKBAR_SET_GLOBAL_LOADING_INDICATORS;
        next:  symbol[];
    }   | {
        type: actions.SNACKBAR_SET_LOCALE;
        next:  LOCALE_LANGUAGES | null;
    }   | {
        type: actions.SNACKBAR_SET_FEATURE;
        next:  APP_FEATURES | null;
    }   | {
        type: actions.SNACKBAR_SET_APP_BASE_PATH;
        next:  string | null;
    }
);

export const isSnackbarReducerActionsBase = (item: any): item is SnackbarReducerActionsBase => {
    if (!item) { return false; }
    if (typeof item === "object") {
        const { type } = item;

        return typeof type === "string" && actions.hasOwnProperty(type);
    }
    return false;
}

export default SnackbarReducerActionsBase